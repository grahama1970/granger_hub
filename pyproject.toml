# IMPORTANT: When running 'uv sync' with an activated virtual environment,
# always use 'uv sync --active' to avoid path warnings
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "granger_hub"
version = "0.4.0"
description = "Granger Hub - Central orchestration hub for the Granger autonomous research ecosystem"
readme = "README.md"
requires-python = ">=3.10.11"
license = { text = "MIT" }
authors = [
    { name = "Graham Anderson", email = "graham@grahama.co" }
]
keywords = ["sparta", "cybersecurity", "mcp", "stix", "data-extraction", "arangodb"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
    # MCP Server Requirements
    "mcp>=1.2.0", # MCP protocol implementation
    "uvicorn>=0.30.0", # ASGI server for MCP
    "sse-starlette>=1.8.2", # Server-sent events for MCP
    # STIX/Cybersecurity Data
    "playwright>=1.40.0", # For JavaScript-rendered sites
    "stix2>=3.0.0", # STIX data handling
    # Data validation and settings
    "pydantic>=2.8.0",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    # Async support (required for MCP)
    "aiohttp>=3.9.1",
    "aiofiles>=23.2.1",
    "aiosqlite>=0.19.0", # Async SQLite for progress tracking
    "anyio>=4.2.0",
    # HTTP client
    "httpx>=0.24.0",
    # Data processing
    "pandas>=2.0.0", # If needed for data manipulation
    # Reinforcement Learning for Hub Optimization
    "rl-commons @ git+https://github.com/grahama1970/rl_commons.git@master",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0", # For embeddings/ML
    # Utilities
    "typer>=0.12.0", # CLI
    "rich>=13.0.0", # Pretty printing
    "loguru>=0.7.3", # Logging
    "tqdm>=4.66.0", # Progress bars
    "python-dateutil>=2.8.2",
    "psutil>=5.9.0", # System monitoring (useful for MCP servers)
    "mitreattack-python>=3.0.0", # Official MITRE ATT&CK library
    "xmltodict>=0.13.0", # For parsing CAPEC/CWE XML
    "beautifulsoup4>=4.12.0", # HTML parsing when needed
    "rdflib>=7.0.0", # For D3FEND OWL/RDF parsing
    "nvdlib>=0.7.0", # NVD/CVE data access
    # Database and ingestion pipeline
    "python-arango>=8.0.0", # ArangoDB client
    "litellm>=1.0.0", # For Perplexity API calls
    "allure-pytest>=2.14.2",
    "fastmcp>=2.5.1",
    "jinja2>=3.1.0",  # For prompt templates
    # LLM Integration
    "llm_call @ git+https://github.com/grahama1970/llm_call.git@main",
    # Test Reporting
    "claude-test-reporter @ git+https://github.com/grahama1970/claude-test-reporter.git",
    # Screenshot and Browser Automation
    "mcp-screenshot @ https://github.com/grahama1970/mcp-screenshot.git",
    "schedule",
    "pytest-json-report>=1.5.0",
]

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "aioresponses>=0.7.6",
    "allure-pytest>=2.13.0",
    "pytest-html>=4.0.0",
    "pytest-json-report>=1.5.0"
]
dev = [
    "black>=23.3.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
# addopts = "-v --cov=sparta_mcp_server --json-report --json-report-file=test_results.json"

[project.scripts]
# sparta-mcp-server = "sparta_mcp_server:main"  # MCP server entry point
# sparta-cli = "sparta_mcp_server.cli.app:app"  # CLI for testing/management
granger-cli = "granger_hub.cli.claude_comm:main"  # CLI for Granger hub

[tool.hatch.build.targets.wheel]
packages = ["src/granger_hub"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true

[dependency-groups]
dev = [
    "allure-pytest>=2.14.2",
    "pytest-html>=4.1.1",
    "pytest-json-report>=1.5.0",
]
